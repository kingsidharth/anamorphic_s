/* __________ HELPER CLASSES, FOR SANITY __________
 */

/* _____ TYPOGRAPHY _____ */

// Weights
.thin {
  font-weight: 300;
}

.normal {
  font-weight: normal;
}

.strong {
  font-weight: bold;
}

.thick {
  font-weight: 800;
}


/* PSEUDO ELEMENTS */
@mixin after-element {
  position: relative;
  &:after {
    content: '';
    position: absolute;
  }
}

/* _____ ALIGNMENTS _____ */

// Normal
@mixin alignments($namespace: "") {

  .#{$namespace}right { text-align: right; }
  .#{$namespace}center { text-align: center; }
  .#{$namespace}left { text-align: left; }

}

@include alignments();

@include media-query(palm) {
  @include alignments('palm-');
}

@include media-query(lap) {
  @include alignments('lap-')
}

@include media-query(portable) {
  @include alignments('portable-');
}

@include media-query(desk) {
  @include alignments('desk-');
}

/* _____ COLORS _____ */

// Clear-Fixes
.clear {
  clear: both !important;
  display: block;
}

.clearleft {
  display: inline-block;
  clear: left !important;
}

.clearright {
  display: inline-block;
  clear: right !important;
}


/* _____ FLOATS _____ */
// "That's the most evil thing I've ever known."
$floats: left right none;

@mixin float-base($float, $namespace: "") {
  .#{$namespace}float#{$float} { float: $float; }
}

@mixin floater($floats, $namespace:"") {
  @each $float in $floats {
    @include float-base($float, $namespace);
  }
}

@include floater($floats);
@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include floater($floats, '#{$resolution}-');
  }
}


/* _____ HIDE & SHOW _____ */

@mixin hide-base($namespace: "") {
  @if $namespace != "" {
    .#{$namespace}hidden {
      display: none!important;
    }
  }
  @else {
    .hidden {
      display: none;
    }
  }
}

@mixin hide-mixin($namespace: "") {
  @include hide-base($namespace);
}

@include hide-mixin();
@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include hide-mixin('#{$resolution}-');
  }
}

@mixin show-base($namespace: "") {
  .#{$namespace}-show {
    @each $res in $subres {
      @if $res != $namespace {
        @extend .#{$res}-hidden;
      }
    }
  }
}

@each $resolution in $resolutions {
  @include show-base($resolution);
}

/* _____ MARGINS _____ */
@mixin no-margin-base($namespace: "", $direction: "") {

  .#{$namespace}no#{$direction}-margin{ margin#{$direction}: 0px!important; }

}

@mixin no-margin($namespace: "") {
  @include no-margin-base($namespace);

  @each $direction in $directions {
    @include no-margin-base($namespace, $direction);
  }
}

@include no-margin();

@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include no-margin('#{$resolution}-');
  }
}

.full-bottom-margin {
  margin-bottom: 20px!important;
}

.half-bottom-margin {
  margin-bottom: 10px;
}


/* _____ PADDING _____ */
@mixin no-padding-base($namespace: "", $direction: "") {

  .#{$namespace}no#{$direction}-padding{ padding#{$direction}: 0px!important; }

}

@mixin no-padding($namespace: "") {
  @include no-padding-base($namespace);

  @each $direction in $directions {
    @include no-padding-base($namespace, $direction);
  }
}

@include no-padding();

@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include no-padding('#{$resolution}-');
  }
}

.half-top-padding {
  padding-top: 11.2px;
}

.full-left-padding {
  padding-left: 20px;
}

/* _____ BLOCKS & INLINES _____ */

@mixin display-base($namespace:"", $display: block) {
  .#{$namespace}#{$display} { display: $display!important; }
}

@include display-base();
@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include display-base('#{$resolution}-');
  }
}

@include display-base("", inline-block);
@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include display-base('#{$resolution}-', inline-block);
  }
}


.padded {
  padding: 1em;
}

.rounded {
  border-radius: 3px;
}

// STICKY
%sticky {
  @include media-query(lap-and-up) {
    position: fixed;
    width: 100%;
    margin-left: 0;
    top: 0px;
    left: 0px;
    // Prevent repaint
    @include transform(translateZ(0));
  }
}

// PSEUDO ELEMENTS
@mixin _p_element_properties {
  content: '';
  position: absolute;
}

@mixin after_element {
  &:after {
    @include _p_element_properties;
  }
}

@mixin before_element {
  &:before {
    @include _p_element_properties;
  }
}

@mixin p_element($before: false, $after:false) {
  position: relative;

  @if($before) {
    @include before_element;
  }
  @if($after) {
    @include after_element;
  }
}


// Dirty
@mixin icon-font {
	font-family: 'icomoon';
	speak: none;
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: 1;

	/* Better Font Rendering =========== */
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
